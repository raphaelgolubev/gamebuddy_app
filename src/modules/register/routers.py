from fastapi import APIRouter, Depends

from .schemas import RegisterIn


router = APIRouter(prefix="/register", tags=["Регистрация"])

# Список ошибок
# 1000 - регистрация
# 1001 - пользователь с таким email уже существует
# 1002 - пользователь не найден
# 1003 - код неверный
# 1004 - время действия кода истекло


@router.post("/create", summary="Создает нового пользователя в базе данных")
async def create_user(user: RegisterIn):
    """
    Метод принимает запрос в формате JSON:
    - **email**: электронная почта пользователя
    - **password**: пароль пользователя

    Метод может вернуть следующие ошибки:
    - **1001**: пользователь с таким email уже существует
    """
    return user


@router.post("/verify", summary="Обновляет статус пользователя")
async def verify_user():
    """
    Метод принимает запрос в формате JSON:
    - **email**: электронная почта пользователя
    - **code**: код подтверждения пользователя, высланный на почту

    Метод может вернуть следующие ошибки:
    - **1002**: пользователь не найден
    - **1003**: код неверный

    """
    pass


@router.post("/send-code", summary="Отправляет код подтверждения на почту")
async def send_code():
    """
    Метод принимает запрос в формате JSON:
    """
    pass
